{
  "decks": [
    {
      "id": 1,
      "name": "Rendering in React 1",
      "description": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. ",
      "back": "React's component structure allows for quickly building a complex web application that relies on DOM manipulation. f"
    },
    {
      "name": "React Router",
      "description": "React Router is a collection of navigational components that compose declaratively with your application.",
      "id": 2
    },
    {
      "id": 3,
      "name": "ABC",
      "description": "ABC"
    },
    {
      "name": "aaa",
      "description": "aaa",
      "id": 4
    },
    {
      "name": "Niko Babo",
      "description": "baboya",
      "id": 5
    },
    {
      "name": "Test",
      "description": "this is a test",
      "id": 6
    },
    {
      "name": "Test 2",
      "description": "Test 2",
      "id": 7
    },
    {
      "name": "ll",
      "description": "kk",
      "id": 8
    },
    {
      "name": "",
      "description": "",
      "id": 9
    },
    {
      "id": 10,
      "name": "jj",
      "description": "jj"
    },
    {
      "id": 11,
      "name": "jj",
      "description": "j"
    }
  ],
  "cards": [
    {
      "id": 1,
      "front": "Differeadsfntiate between Real DOM and Virtual DOM.",
      "back": "Virtual DOM updates are faster but do not directly update the HTMLasdf",
      "deckId": 1
    },
    {
      "id": 2,
      "front": "How do you modify the state of a different React component?",
      "back": "Not at all! State is visible to the component only.",
      "deckId": 1
    },
    {
      "id": 3,
      "front": "How do you pass data 'down' to a React child component?",
      "back": "As properties or props",
      "deckId": 1
    },
    {
      "front": "What path will match the follow Route?\n<Route>\n  <NotFound />\n</Route>",
      "back": "All paths. A route with no path matches all URL's",
      "deckId": 2,
      "id": 4
    },
    {
      "front": "What does <Switch> do?",
      "back": "Renders the first matching child <Route> ",
      "deckId": 2,
      "id": 5
    },
    {
      "cards": [],
      "front": "b",
      "back": "b",
      "deckId": 1,
      "id": 7
    },
    {
      "front": "",
      "back": "",
      "deckId": 2,
      "name": "g",
      "description": "h",
      "id": 8
    },
    {
      "front": "jj",
      "back": "nnn",
      "deckId": 4,
      "id": 9
    },
    {
      "front": "jkjkj",
      "back": "kjkjkjkj",
      "deckId": 3,
      "id": 10
    },
    {
      "front": "THis is a test",
      "back": "test",
      "deckId": 7,
      "id": 11
    },
    {
      "front": "test2",
      "back": "2222",
      "deckId": 7,
      "id": 12
    },
    {
      "front": "Hi",
      "back": "Hi",
      "deckId": 7,
      "id": 13
    },
    {
      "front": "fdasf",
      "back": "dasfadsf",
      "deckId": 7,
      "id": 14
    }
  ]
}